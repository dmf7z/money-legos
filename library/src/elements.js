const contracts = require("../../common/contracts");
const validator = require("./utils/validator");

module.exports = {
  INPUT_DAI: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.DAI],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of DAI",
        description: "Please enter the amount of DAI to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_ETH: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.ETH],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of ETH",
        description: "Please enter the amount of ETH to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_WETH: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.WETH],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of WETH",
        description: "Please enter the amount of WETH to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_USDC: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.USDC],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of USDC",
        description: "Please enter the amount of USDC to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_USDT: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.USDT],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of USDT",
        description: "Please enter the amount of USDT to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_SUSD: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.SUSD],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of SUSD",
        description: "Please enter the amount of SUSD to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_WBTC: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.WBTC],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of WBTC",
        description: "Please enter the amount of WBTC to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_REP: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.REP],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of REP",
        description: "Please enter the amount of REP to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_CDAI: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.CDAI],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of CDAI",
        description: "Please enter the amount of CDAI to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_CUSDC: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.CUSDC],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of CUSDC",
        description: "Please enter the amount of CUSDC to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_CWBTC: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.CWBTC],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of CWBTC",
        description: "Please enter the amount of CWBTC to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  INPUT_CETH: {
    type: "InputElement",
    address: "0x0000000000000000000000000000000000000001",
    inputs: [],
    outputs: [contracts.ASSETS.CETH],
    connections: [],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Amount of CETH",
        description: "Please enter the amount of CETH to execute",
        required: true,
        value: null,
        isValid: validator.notNullAmount,
      },
    ],
  },
  OP_UNISWAP_WBTC_TO_ETH: {
    type: "OperationElement",
    address: contracts.OPERATIONS.OP_UNISWAP,
    inputs: [contracts.ASSETS.WBTC],
    outputs: [contracts.ASSETS.ETH],
    connections: [],
    executionData: [
      {
        type: "raw",
        data: contracts.UNISWAP.UNISWAP_EXCHANGE_WBTC_ETH,
      },
      {
        type: "raw",
        data: contracts.ASSETS.WBTC,
      },
      {
        type: "raw",
        data: false,
      },
      {
        type: "input",
        title: "Min amount",
        description: "Please enter the min amount to buy",
        required: false,
        default: "1",
        value: null,
        isValid: validator.nullOrAmount,
      },
      {
        type: "input",
        title: "Deadline",
        description: "Please enter the deadline for trade to expire in seconds",
        required: false,
        default: 4745221884, //year 2120
        value: null,
        isValid: validator.nullOrTimeStamp,
      },
    ],
  },
  OP_UNISWAP_ETH_TO_WBTC: {
    type: "OperationElement",
    address: contracts.OPERATIONS.OP_UNISWAP,
    inputs: [contracts.ASSETS.ETH],
    outputs: [contracts.ASSETS.WBTC],
    connections: [],
    executionData: [
      {
        type: "raw",
        data: contracts.UNISWAP.UNISWAP_EXCHANGE_WBTC_ETH,
      },
      {
        type: "raw",
        data: contracts.ASSETS.WBTC,
      },
      {
        type: "raw",
        data: true,
      },
      {
        type: "input",
        title: "Min amount",
        description: "Please enter the min amount to buy",
        required: false,
        default: "1",
        value: null,
        isValid: validator.nullOrAmount,
      },
      {
        type: "input",
        title: "Deadline",
        description: "Please enter the deadline for trade to expire in seconds",
        required: false,
        default: 4745221884, //year 2120
        value: null,
        isValid: validator.nullOrTimeStamp,
      },
    ],
  },
  OP_UNISWAP_USDC_TO_ETH: {
    type: "OperationElement",
    address: contracts.OPERATIONS.OP_UNISWAP,
    inputs: [contracts.ASSETS.USDC],
    outputs: [contracts.ASSETS.ETH],
    connections: [],
    executionData: [
      {
        type: "raw",
        data: contracts.UNISWAP.UNISWAP_EXCHANGE_USDC_ETH,
      },
      {
        type: "raw",
        data: contracts.ASSETS.USDC,
      },
      {
        type: "raw",
        data: false,
      },
      {
        type: "input",
        title: "Min amount",
        description: "Please enter the min amount to buy",
        required: false,
        default: "1",
        value: null,
        isValid: validator.nullOrAmount,
      },
      {
        type: "input",
        title: "Deadline",
        description: "Please enter the deadline for trade to expire in seconds",
        required: false,
        default: 4745221884, //year 2120
        value: null,
        isValid: validator.nullOrTimeStamp,
      },
    ],
  },
  OP_UNISWAP_ETH_TO_USDC: {
    type: "OperationElement",
    address: contracts.OPERATIONS.OP_UNISWAP,
    inputs: [contracts.ASSETS.ETH],
    outputs: [contracts.ASSETS.USDC],
    connections: [],
    executionData: [
      {
        type: "raw",
        data: contracts.UNISWAP.UNISWAP_EXCHANGE_USDC_ETH,
      },
      {
        type: "raw",
        data: contracts.ASSETS.USDC,
      },
      {
        type: "raw",
        data: true,
      },
      {
        type: "input",
        title: "Min amount",
        description: "Please enter the min amount to buy",
        required: false,
        default: "1",
        value: null,
        isValid: validator.nullOrAmount,
      },
      {
        type: "input",
        title: "Deadline",
        description: "Please enter the deadline for trade to expire in seconds",
        required: false,
        default: 4745221884, //year 2120
        value: null,
        isValid: validator.nullOrTimeStamp,
      },
    ],
  },
  OP_UNISWAP_DAI_TO_ETH: {
    type: "OperationElement",
    address: contracts.OPERATIONS.OP_UNISWAP,
    inputs: [contracts.ASSETS.DAI],
    outputs: [contracts.ASSETS.ETH],
    connections: [],
    executionData: [
      {
        type: "raw",
        data: contracts.UNISWAP.UNISWAP_EXCHANGE_DAI_ETH,
      },
      {
        type: "raw",
        data: contracts.ASSETS.DAI,
      },
      {
        type: "raw",
        data: false,
      },
      {
        type: "input",
        title: "Min amount",
        description: "Please enter the min amount to buy",
        required: false,
        default: "1",
        value: null,
        isValid: validator.nullOrAmount,
      },
      {
        type: "input",
        title: "Deadline",
        description: "Please enter the deadline for trade to expire in seconds",
        required: false,
        default: 4745221884, //year 2120
        value: null,
        isValid: validator.nullOrTimeStamp,
      },
    ],
  },
  OP_UNISWAP_ETH_TO_DAI: {
    type: "OperationElement",
    address: contracts.OPERATIONS.OP_UNISWAP,
    inputs: [contracts.ASSETS.ETH],
    outputs: [contracts.ASSETS.DAI],
    connections: [],
    executionData: [
      {
        type: "raw",
        data: contracts.UNISWAP.UNISWAP_EXCHANGE_DAI_ETH,
      },
      {
        type: "raw",
        data: contracts.ASSETS.DAI,
      },
      {
        type: "raw",
        data: true,
      },
      {
        type: "input",
        title: "Min amount",
        description: "Please enter the min amount to buy",
        required: false,
        default: "1",
        value: null,
        isValid: validator.nullOrAmount,
      },
      {
        type: "input",
        title: "Deadline",
        description: "Please enter the deadline for trade to expire in seconds",
        required: false,
        default: 4745221884, //year 2120
        value: null,
        isValid: validator.nullOrTimeStamp,
      },
    ],
  },
  SPLITTER_DAI: {
    type: "SplitterElement",
    address: "0x0000000000000000000000000000000000000002",
    inputs: [contracts.ASSETS.DAI],
    outputs: [contracts.ASSETS.DAI, contracts.ASSETS.DAI],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "% of split",
        description: "Please enter a percentage to split. Default: 50%",
        required: false,
        default: 50,
        value: null,
        isValid: validator.nullOrPercentage,
      },
    ],
  },
  ADDRESS: {
    type: "AddressElement",
    address: "0x0000000000000000000000000000000000000003",
    inputs: [
      contracts.ASSETS.ETH,
      contracts.ASSETS.DAI,
      contracts.ASSETS.WETH,
      contracts.ASSETS.USDC,
      contracts.ASSETS.USDT,
      contracts.ASSETS.SUSD,
      contracts.ASSETS.WBTC,
      contracts.ASSETS.REP,
      contracts.ASSETS.CDAI,
      contracts.ASSETS.CUSDC,
      contracts.ASSETS.CWBTC,
      contracts.ASSETS.CETH,
    ],
    outputs: [],
    connections: [],
    executionData: [
      {
        type: "input",
        title: "Destination address",
        description: "Please enter the destination address",
        required: true,
        value: null,
        isValid: validator.address,
      },
    ],
  },
};
